serial - TCP шлюз.
Может автоматически опрашивать каналы по последовательному интерфейсу, отправляя им запросы, 
определенные в ./config/channel/interface/get.tsv, при этом ответы ведомого устройства сохраняются в буфер. 
При получении команды от клиента по протоколу TCP, в зависимости от команды отправляет данные из буфера, либо
пересылает данные каналу ведомого устройства по последовательному интерфейсу, либо пересылает запрос каналу ведомого устройства и 
отправляет клиенту ответ этого канала. 
Количество отслеживаемых каналов неограничено, номера каналов должны быть уникальными. Количество используемых
последовательных портов для опроса каналов неограничено.
Потоки:
	-главный поток (начало и завершение работы, установление соединения с клиентами)
	-параллельный TCP сервер (несколько потоков для обслуживания клиентов);
	-активатор потоков последовательных портов (если есть неподключенные каналы,
	то ищет последовательные порты по шаблону имени и если находит порт, не имеющий котролирующего
	потока, создает для него контролирующий поток);
	-контролирующие потоки последовательных портов (если есть неподключенные каналы,
	опрашивают порты на наличие этих каналов, если находят каналы,
	то добавляют себе ссылки на эти каналы, после чего начинают опрашивать все найденные каналы в соответствии
	с настройками в ./config/channel/interface/get.tsv. При ошибке связи поток завершается, 
	пометив свои каналы как неподключенные).
1 Установка
1.1 Требования
Приложение должно работать в ОС, поддерживающей стандарт POSIX. Скрипт-установщик
работает в командной оболочке bash.
1.2 Настройки:
- место установки исполняемого файла: файл build.sh константа INST_DIR
- место установки файла конфигурации: файл build.sh константа CONF_DIR (должна соответствовать CONF_DIR из main.h)
1.3 Команды для установки:
cd gwai
Полная установка:
sudo ./build.sh full
Для тестирования (файлы не копируются за пределы текущей папки):
sudo ./build.sh part_debug

2 Настройка перед запуском
файл ./config/app.tsv:
	port - номер порта TCP сервера,
	cd_s - минимальная продолжительность цикла контролирующих потоков последовательных портов в секундах,
	cd_ns - минимальная продолжительность цикла контролирующих потоков последовательных портов в наносекундах,
	conn_num - количество потоков для обслуживания соединений TCP сервера,
	max_retry - количество повторов неудавшегося запроса,
	serial_pattern - шаблон имени последовательного порта,
	serial_rate - скорость последовательных портов,
	serial_config - конфигурация последовательных портов (5 || 6 || 7 || 8) && (N || O || E || n || o || e) && (1 || 2)
В файле ./config/channel/items.tsv нужно перечислить каналы, которые будут использоваться:
	id - уникальный номер канала.
В файле ./config/channel/interface/get.tsv нужно определить команды для опроса каналов ведомых устройств:
	channel_id - идентификатор канала из файла ./config/channel/items.tsv;
	cmd - команда;
	data_type - тип данных, возвращаемый ведомым устройством при получении команды;
	interval_s - интервал опроса, секунды;
	interval_ns - интервал опроса, наносекунды.
В файле ./config/channel/interface/set.tsv нужно определить команды для отправки данных на каналы ведомых устройств.
	channel_id -  - идентификатор канала из файла ./config/channel/items.tsv;
	cmd - команда;
	data_type - тип данных, который будет отравлен по данной команде.
3 Запуск
При полной установке запускается автоматически, вмести с операционной системой.
sudo gwai
Если приложение установлено для тестирования:
sudo ./gwai_dbg

4 Использование
4.1 Терминал
Чтобы прочитать данные с определенных каналов, можно использовать утилиту netcat:
printf "cgfts\r1\n2\n\f" | nc 127.0.0.1 49188
	, где 
		cgfts - команда,
		1,2 - номера каналов,
		\r - разделитель блока,
		\n - разделитель строки,
		\f - конец сообщения.
ответ:
1	33.180	1562067385	570982444	1
2	34.820	1562062693	379982123	1
формат ответа:
номер_канала	измеренная_величина	время_с	время_нс	статус
Чтобы получить распечатку основных данных приложения:
printf "apr\r\f" | nc 127.0.0.1 49188
4.2 Графический интерфейс пользователя
для чтения данных с модулей ввода:
https://github.com/arinichevN/monitor_clt
для отправки данных на модули вывода:
https://github.com/arinichevN/outctrl_clt






